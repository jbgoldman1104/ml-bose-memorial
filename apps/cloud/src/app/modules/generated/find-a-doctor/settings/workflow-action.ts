export const workflowAction = [
  {
    addModalAttributes: [
      {
        id: 213133,
        isDisplayValue: true,
        name: 'eligiblePcp',
        label: 'Eligible PCP',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'eligiblePcp',
        params: {
          baseModel: 'eligiblePcp',
          value: { formatType: 'uuid', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 13433,
        isDisplayValue: false,
        name: 'pcpMail',
        label: 'Pcp Mail',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'pcpMail',
        params: {
          baseModel: 'pcpMail',
          value: { formatType: 'email', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 59127,
        isDisplayValue: false,
        name: 'primaryCareLastName',
        label: 'Primary Care Last Name',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'primaryCareLastName',
        params: {
          baseModel: 'primaryCareLastName',
          value: { formatType: 'last_name', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 201606,
        isDisplayValue: false,
        name: 'p2P',
        label: 'P 2 P',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'p2P',
        params: {
          baseModel: 'p2P',
          value: { formatType: 'prime', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 201605,
        isDisplayValue: false,
        name: 'commercialInsurance',
        label: 'Commercial Insurance',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'commercialInsurance',
        params: {
          baseModel: 'commercialInsurance',
          value: { formatType: 'prime', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 201601,
        isDisplayValue: false,
        name: 'basicFee',
        label: 'Basic Fee',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'basicFee',
        params: {
          baseModel: 'basicFee',
          value: {
            formatType: 'USD',
            transformation: 'selfSingle',
            format: { max: 100, min: 1, prefix: '$', suffix: 'k' },
          },
        },
      },
      {
        id: 201603,
        isDisplayValue: false,
        name: 'medicare',
        label: 'Medicare',
        hasMany: false,
        elements: { displayComponent: 'BinaryView', inputComponent: 'Switch' },
        rawEntityName: 'medicare',
        params: {
          baseModel: 'medicare',
          value: { formatType: 'boolean', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 201602,
        isDisplayValue: false,
        name: 'specialistFee',
        label: 'Specialist Fee',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'specialistFee',
        params: {
          baseModel: 'specialistFee',
          value: {
            formatType: 'USD',
            transformation: 'selfSingle',
            format: { max: 100, min: 1, prefix: '$', suffix: 'k' },
          },
        },
      },
      {
        id: 201600,
        isDisplayValue: false,
        name: 'officeHours',
        label: 'Office Hours',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'officeHours',
        params: {
          baseModel: 'officeHours',
          value: { formatType: 'prime', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 201599,
        isDisplayValue: false,
        name: 'npi',
        label: 'NPI',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'npi',
        params: {
          baseModel: 'npi',
          value: { formatType: 'integer', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 201598,
        isDisplayValue: false,
        name: 'pcpSuite',
        label: 'PCP Suite',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'pcpSuite',
        params: {
          baseModel: 'pcpSuite',
          value: {
            formatType: 'prime',
            transformation: 'selfSingle',
            format: {
              examples: [
                '1a',
                '2',
                '3',
                '4',
                '5',
                '6',
                '3a',
                '101',
                '202',
                '1000',
                'a',
                'b',
                'c',
                'd',
                'e',
                'f',
                'g',
                '300',
                '44',
                'q',
              ],
            },
          },
        },
      },
      {
        id: 201597,
        isDisplayValue: false,
        name: 'pcpStreetAddress',
        label: 'PCP Street Address',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'pcpStreetAddress',
        params: {
          baseModel: 'pcpStreetAddress',
          value: { formatType: 'address1', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 201596,
        isDisplayValue: false,
        name: 'pcpZipCode',
        label: 'PCPZIP Code',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'pcpZipCode',
        params: {
          baseModel: 'pcpZipCode',
          value: { formatType: 'zip', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 201595,
        isDisplayValue: false,
        name: 'telephone',
        label: 'Telephone',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'telephone',
        params: {
          baseModel: 'telephone',
          value: { formatType: 'phone', transformation: 'selfSingle', format: {} },
        },
      },
      {
        id: 201594,
        isDisplayValue: false,
        name: 'title',
        label: 'Title',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'title',
        params: {
          baseModel: 'title',
          value: {
            formatType: 'prime',
            transformation: 'selfSingle',
            format: {
              examples: [
                'D.D.S.',
                'D.M.D.',
                'D.O. ',
                'D.P.M.',
                'F.A.A.D.',
                'F.A.A.E.M.',
                'F.A.A.F.P.',
                'F.A.C.C.',
                'F.A.C.E.',
                'F.A.C.E.P. ',
                'M.D.',
                'M.P.H.',
                'N.P. ',
              ],
            },
          },
        },
      },
      {
        id: 201593,
        isDisplayValue: false,
        name: 'primaryCareName',
        label: 'Primary Care Name',
        hasMany: false,
        elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
        rawEntityName: 'primaryCareName',
        params: {
          baseModel: 'primaryCareName',
          value: { formatType: 'full_name', transformation: 'selfSingle', format: {} },
        },
      },
    ],
    areYouSure: false,
    component: 'EligiblePcpAddModal',
    displayName: `Add`,
    name: `add`,
    type: `add`,
  },
  {
    addModalAttributes: [],
    areYouSure: false,
    displayName: `Delete`,
    name: `_delete_`,
    type: `delete`,
  },
];
