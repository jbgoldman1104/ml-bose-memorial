import { Transformation, StatisticalDataType, WidgetTypes, ElementDisplayType } from '@kleeen/types';

export const widgets = [
  {
    actions: [
      {
        addModalAttributes: [
          {
            id: 213133,
            isDisplayValue: true,
            name: 'eligiblePcp',
            label: 'Eligible PCP',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'eligiblePcp',
            params: {
              baseModel: 'eligiblePcp',
              value: { formatType: 'uuid', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 13433,
            isDisplayValue: false,
            name: 'pcpMail',
            label: 'Pcp Mail',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'pcpMail',
            params: {
              baseModel: 'pcpMail',
              value: { formatType: 'email', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 59127,
            isDisplayValue: false,
            name: 'primaryCareLastName',
            label: 'Primary Care Last Name',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'primaryCareLastName',
            params: {
              baseModel: 'primaryCareLastName',
              value: { formatType: 'last_name', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 201606,
            isDisplayValue: false,
            name: 'p2P',
            label: 'P 2 P',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'p2P',
            params: {
              baseModel: 'p2P',
              value: { formatType: 'prime', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 201605,
            isDisplayValue: false,
            name: 'commercialInsurance',
            label: 'Commercial Insurance',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'commercialInsurance',
            params: {
              baseModel: 'commercialInsurance',
              value: { formatType: 'prime', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 201601,
            isDisplayValue: false,
            name: 'basicFee',
            label: 'Basic Fee',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'basicFee',
            params: {
              baseModel: 'basicFee',
              value: {
                formatType: 'USD',
                transformation: 'selfSingle',
                format: { max: 100, min: 1, prefix: '$', suffix: 'k' },
              },
            },
          },
          {
            id: 201603,
            isDisplayValue: false,
            name: 'medicare',
            label: 'Medicare',
            hasMany: false,
            elements: { displayComponent: 'BinaryView', inputComponent: 'Switch' },
            rawEntityName: 'medicare',
            params: {
              baseModel: 'medicare',
              value: { formatType: 'boolean', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 201602,
            isDisplayValue: false,
            name: 'specialistFee',
            label: 'Specialist Fee',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'specialistFee',
            params: {
              baseModel: 'specialistFee',
              value: {
                formatType: 'USD',
                transformation: 'selfSingle',
                format: { max: 100, min: 1, prefix: '$', suffix: 'k' },
              },
            },
          },
          {
            id: 201600,
            isDisplayValue: false,
            name: 'officeHours',
            label: 'Office Hours',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'officeHours',
            params: {
              baseModel: 'officeHours',
              value: { formatType: 'prime', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 201599,
            isDisplayValue: false,
            name: 'npi',
            label: 'NPI',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'npi',
            params: {
              baseModel: 'npi',
              value: { formatType: 'integer', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 201598,
            isDisplayValue: false,
            name: 'pcpSuite',
            label: 'PCP Suite',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'pcpSuite',
            params: {
              baseModel: 'pcpSuite',
              value: {
                formatType: 'prime',
                transformation: 'selfSingle',
                format: {
                  examples: [
                    '1a',
                    '2',
                    '3',
                    '4',
                    '5',
                    '6',
                    '3a',
                    '101',
                    '202',
                    '1000',
                    'a',
                    'b',
                    'c',
                    'd',
                    'e',
                    'f',
                    'g',
                    '300',
                    '44',
                    'q',
                  ],
                },
              },
            },
          },
          {
            id: 201597,
            isDisplayValue: false,
            name: 'pcpStreetAddress',
            label: 'PCP Street Address',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'pcpStreetAddress',
            params: {
              baseModel: 'pcpStreetAddress',
              value: { formatType: 'address1', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 201596,
            isDisplayValue: false,
            name: 'pcpZipCode',
            label: 'PCPZIP Code',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'pcpZipCode',
            params: {
              baseModel: 'pcpZipCode',
              value: { formatType: 'zip', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 201595,
            isDisplayValue: false,
            name: 'telephone',
            label: 'Telephone',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'telephone',
            params: {
              baseModel: 'telephone',
              value: { formatType: 'phone', transformation: 'selfSingle', format: {} },
            },
          },
          {
            id: 201594,
            isDisplayValue: false,
            name: 'title',
            label: 'Title',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'title',
            params: {
              baseModel: 'title',
              value: {
                formatType: 'prime',
                transformation: 'selfSingle',
                format: {
                  examples: [
                    'D.D.S.',
                    'D.M.D.',
                    'D.O. ',
                    'D.P.M.',
                    'F.A.A.D.',
                    'F.A.A.E.M.',
                    'F.A.A.F.P.',
                    'F.A.C.C.',
                    'F.A.C.E.',
                    'F.A.C.E.P. ',
                    'M.D.',
                    'M.P.H.',
                    'N.P. ',
                  ],
                },
              },
            },
          },
          {
            id: 201593,
            isDisplayValue: false,
            name: 'primaryCareName',
            label: 'Primary Care Name',
            hasMany: false,
            elements: { displayComponent: 'Label', inputComponent: 'FieldTextAutoComplete' },
            rawEntityName: 'primaryCareName',
            params: {
              baseModel: 'primaryCareName',
              value: { formatType: 'full_name', transformation: 'selfSingle', format: {} },
            },
          },
        ],
        areYouSure: false,
        component: 'EligiblePcpAddModal',
        displayName: `Add`,
        name: `add`,
        type: `add`,
      },
      {
        addModalAttributes: [],
        areYouSure: false,
        displayName: `Delete`,
        name: `_delete_`,
        type: `delete`,
      },
      {
        addModalAttributes: [],
        areYouSure: true,
        displayName: `Add to My List`,
        name: `addToMyList`,
        type: `custom`,
      },
      {
        addModalAttributes: [],
        areYouSure: true,
        displayName: `Request A Visit`,
        name: `requestAVisit`,
        type: `custom`,
      },
    ],
    attributes: [
      {
        aggregation: Transformation.SelfSingle,
        canAddValues: true,
        canEditValues: false,
        crossLinking: [],
        dataType: `Title`,
        deepDataType: `string`,
        editable: false,
        format: {
          examples: [
            'D.D.S.',
            'D.M.D.',
            'D.O. ',
            'D.P.M.',
            'F.A.A.D.',
            'F.A.A.E.M.',
            'F.A.A.F.P.',
            'F.A.C.C.',
            'F.A.C.E.',
            'F.A.C.E.P. ',
            'M.D.',
            'M.P.H.',
            'N.P. ',
          ],
        },
        formatType: `prime`,
        hasMany: false,
        id: 201594,
        isDisplayValue: false,
        isNullable: false,
        label: `title`,
        multiple: true,
        name: `title`,
        prototypeId: 200928,
        settings: {},
        statisticalType: StatisticalDataType.Categorical,
        transformation: Transformation.SelfSingle,
      },
      {
        aggregation: Transformation.SelfSingle,
        canAddValues: true,
        canEditValues: false,
        crossLinking: [{ title: 'Doctor Details', slug: 'doctor-details' }],
        dataType: `PrimaryCareName`,
        deepDataType: `full_name`,
        editable: false,
        format: {},
        formatType: `full_name`,
        hasMany: false,
        id: 201593,
        isDisplayValue: false,
        isNullable: false,
        label: `primary care name`,
        multiple: true,
        name: `primaryCareName`,
        prototypeId: 200957,
        settings: {},
        statisticalType: StatisticalDataType.FreeForm,
        transformation: Transformation.SelfSingle,
      },
      {
        aggregation: Transformation.SelfSingle,
        canAddValues: true,
        canEditValues: false,
        crossLinking: [],
        dataType: `PrimaryCareLastName`,
        deepDataType: `last_name`,
        editable: false,
        format: {},
        formatType: `last_name`,
        hasMany: false,
        id: 59127,
        isDisplayValue: false,
        isNullable: false,
        label: `primary care last name`,
        multiple: true,
        name: `primaryCareLastName`,
        prototypeId: 200961,
        settings: {},
        statisticalType: StatisticalDataType.FreeForm,
        transformation: Transformation.SelfSingle,
      },
      {
        aggregation: Transformation.SelfSingle,
        canAddValues: true,
        canEditValues: false,
        crossLinking: [],
        dataType: `Telephone`,
        deepDataType: `phone`,
        editable: false,
        format: {},
        formatType: `phone`,
        hasMany: false,
        id: 201595,
        isDisplayValue: false,
        isNullable: false,
        label: `telephone`,
        multiple: true,
        name: `telephone`,
        prototypeId: 200973,
        settings: {},
        statisticalType: StatisticalDataType.Unordered,
        transformation: Transformation.SelfSingle,
      },
    ],
    chartType: WidgetTypes.FULL_TABLE,
    entityId: 213133,
    id: `7ff9861e-5fd0-46ba-80ca-6e0fdd9b8c22`,
    name: 'Eligible PCP List',
    params: {
      baseModel: `EligiblePcp`,
      operationName: `object_listing_7ff9861e_5fd0_46ba_80ca_6e0fdd9b8c22`,
    },
    scope: undefined,
    type: 'table',
    viableSolutions: [],
    viewId: 'ks-view-gNyPZfq4Hs5h6Ggs8ENosW',
    viewOrder: 2,
  },
  {
    actions: [],
    attributes: [],
    chartType: undefined,
    name: 'Eligible PCP Dashboard',
    scope: undefined,
    type: 'dashboard',
    viableSolutions: [],
    viewId: 'ks-view-ieySkGjWi6RPcUMhgsCYQX',
    viewOrder: 3,
    widgets: [
      {
        actions: [],
        attributes: [
          {
            aggregation: Transformation.CountTotal,
            canAddValues: false,
            canEditValues: false,
            crossLinking: [],
            elements: {
              displayComponent: ElementDisplayType.Label,
            },
            format: {},
            formatType: `uuid`,
            id: 213133,
            isFilterable: { in: false, out: false },
            label: `Count of Eligible PCP`,
            name: `eligiblePcp`,
            statisticalType: StatisticalDataType.FreeForm,
            transformation: Transformation.CountTotal,
          },
        ],
        chartType: WidgetTypes.SUMMARY_STATISTICS,
        id: `19a4362f-759a-4a7d-ba27-c421b5de97b4`,
        params: {
          operationName: `widget_statistics19a4362f_759a_4a7d_ba27_c421b5de97b4`,
          value: {
            format: {},
            formatType: `uuid`,
            label: `Eligible PCP`,
            name: `eligiblePcp`,
            transformations: [
              {
                transformation: Transformation.CountTotal,
                isPrimary: true,
              },
            ],
          },
        },
        scope: undefined,
        sortOrder: 0,
        title: `Number of PCPs`,
        viableSolutions: [],
        viewId: 'ks-view-ieySkGjWi6RPcUMhgsCYQX',
      },
      {
        actions: [],
        attributes: [
          {
            aggregation: Transformation.Average,
            canAddValues: false,
            canEditValues: false,
            crossLinking: [],
            elements: {
              displayComponent: ElementDisplayType.Label,
            },
            format: { min: 1, max: 100, prefix: '$', suffix: 'k' },
            formatType: `USD`,
            id: 201601,
            isFilterable: { in: false, out: false },
            label: `Average of Basic Fee`,
            name: `basicFee`,
            statisticalType: StatisticalDataType.NumericDiscrete,
            transformation: Transformation.Average,
          },
          {
            aggregation: Transformation.Min,
            canAddValues: false,
            canEditValues: false,
            crossLinking: [],
            elements: {
              displayComponent: ElementDisplayType.Label,
            },
            format: { min: 1, max: 100, prefix: '$', suffix: 'k' },
            formatType: `USD`,
            id: 201601,
            isFilterable: { in: false, out: false },
            label: `Min of Basic Fee`,
            name: `basicFee`,
            statisticalType: StatisticalDataType.NumericDiscrete,
            transformation: Transformation.Min,
          },
          {
            aggregation: Transformation.Max,
            canAddValues: false,
            canEditValues: false,
            crossLinking: [],
            elements: {
              displayComponent: ElementDisplayType.Label,
            },
            format: { min: 1, max: 100, prefix: '$', suffix: 'k' },
            formatType: `USD`,
            id: 201601,
            isFilterable: { in: false, out: false },
            label: `Max of Basic Fee`,
            name: `basicFee`,
            statisticalType: StatisticalDataType.NumericDiscrete,
            transformation: Transformation.Max,
          },
        ],
        chartType: WidgetTypes.SUMMARY_STATISTICS,
        id: `a8343ab6-da03-4bb2-be6e-27fea7c48f5a`,
        params: {
          operationName: `widget_statisticsa8343ab6_da03_4bb2_be6e_27fea7c48f5a`,
          value: {
            format: { min: 1, max: 100, prefix: '$', suffix: 'k' },
            formatType: `USD`,
            label: `Basic Fee`,
            name: `basicFee`,
            transformations: [
              {
                transformation: Transformation.Average,
                isPrimary: true,
              },
              {
                transformation: Transformation.Min,
                isPrimary: false,
              },
              {
                transformation: Transformation.Max,
                isPrimary: false,
              },
            ],
          },
        },
        scope: undefined,
        sortOrder: 1,
        title: `Basic Fee`,
        viableSolutions: [],
        viewId: 'ks-view-ieySkGjWi6RPcUMhgsCYQX',
      },
      {
        actions: [],
        attributes: [
          {
            aggregation: Transformation.Average,
            canAddValues: false,
            canEditValues: false,
            crossLinking: [],
            elements: {
              displayComponent: ElementDisplayType.Label,
            },
            format: { min: 1, max: 100, prefix: '$', suffix: 'k' },
            formatType: `USD`,
            id: 201602,
            isFilterable: { in: false, out: false },
            label: `Average of Specialist Fee`,
            name: `specialistFee`,
            statisticalType: StatisticalDataType.NumericDiscrete,
            transformation: Transformation.Average,
          },
          {
            aggregation: Transformation.Min,
            canAddValues: false,
            canEditValues: false,
            crossLinking: [],
            elements: {
              displayComponent: ElementDisplayType.Label,
            },
            format: { min: 1, max: 100, prefix: '$', suffix: 'k' },
            formatType: `USD`,
            id: 201602,
            isFilterable: { in: false, out: false },
            label: `Min of Specialist Fee`,
            name: `specialistFee`,
            statisticalType: StatisticalDataType.NumericDiscrete,
            transformation: Transformation.Min,
          },
          {
            aggregation: Transformation.Max,
            canAddValues: false,
            canEditValues: false,
            crossLinking: [],
            elements: {
              displayComponent: ElementDisplayType.Label,
            },
            format: { min: 1, max: 100, prefix: '$', suffix: 'k' },
            formatType: `USD`,
            id: 201602,
            isFilterable: { in: false, out: false },
            label: `Max of Specialist Fee`,
            name: `specialistFee`,
            statisticalType: StatisticalDataType.NumericDiscrete,
            transformation: Transformation.Max,
          },
        ],
        chartType: WidgetTypes.SUMMARY_STATISTICS,
        id: `15778bdf-5ed3-49b8-b1c2-7b79a99fa00c`,
        params: {
          operationName: `widget_statistics15778bdf_5ed3_49b8_b1c2_7b79a99fa00c`,
          value: {
            format: { min: 1, max: 100, prefix: '$', suffix: 'k' },
            formatType: `USD`,
            label: `Specialist Fee`,
            name: `specialistFee`,
            transformations: [
              {
                transformation: Transformation.Average,
                isPrimary: true,
              },
              {
                transformation: Transformation.Min,
                isPrimary: false,
              },
              {
                transformation: Transformation.Max,
                isPrimary: false,
              },
            ],
          },
        },
        scope: undefined,
        sortOrder: 2,
        title: `Specialist Fee`,
        viableSolutions: [],
        viewId: 'ks-view-ieySkGjWi6RPcUMhgsCYQX',
      },
      {
        actions: [],
        attributes: [
          {
            aggregation: Transformation.SelfMulti,
            canAddValues: false,
            canEditValues: false,
            crossLinking: [],
            format: {
              examples: [
                'D.D.S.',
                'D.M.D.',
                'D.O. ',
                'D.P.M.',
                'F.A.A.D.',
                'F.A.A.E.M.',
                'F.A.A.F.P.',
                'F.A.C.C.',
                'F.A.C.E.',
                'F.A.C.E.P. ',
                'M.D.',
                'M.P.H.',
                'N.P. ',
              ],
            },
            formatType: `prime`,
            id: 201594,
            isFilterable: { in: false, out: false },
            label: `Title`,
            name: `title`,
            statisticalType: StatisticalDataType.Categorical,
            transformation: Transformation.SelfMulti,
          },
          {
            aggregation: Transformation.CountTotal,
            canAddValues: false,
            canEditValues: false,
            crossLinking: [],
            format: {},
            formatType: `uuid`,
            id: 213133,
            isFilterable: { in: false, out: false },
            label: `Count of Eligible PCP`,
            name: `eligiblePcp`,
            statisticalType: StatisticalDataType.FreeForm,
            transformation: Transformation.CountTotal,
          },
        ],
        chartType: WidgetTypes.SINGLE_BAR_HIGHLIGHT_MAX,
        id: `d69d1193-a237-43a8-92c1-9dc2d7d919c4`,
        params: {
          cardinality: `SINGLE`,
          groupBy: {
            formatType: `prime`,
            name: `title`,
            transformation: Transformation.SelfMulti,
          },
          operationName: `widget_d69d1193_a237_43a8_92c1_9dc2d7d919c4`,
          value: {
            formatType: `uuid`,
            name: `eligiblePcp`,
            transformation: Transformation.CountTotal,
          },
        },
        scope: undefined,
        sortOrder: 3,
        title: `Types of Eligible PCPs`,
        viableSolutions: [WidgetTypes.SIMPLE_LIST_RANKED],
        viewId: 'ks-view-ieySkGjWi6RPcUMhgsCYQX',
      },
    ],
  },
];
